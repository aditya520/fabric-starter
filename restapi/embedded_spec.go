// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Fabric Starter Server",
    "title": "FSS",
    "version": "1.0.0"
  },
  "host": "localhost:9000",
  "basePath": "/",
  "paths": {
    "/network/create": {
      "post": {
        "tags": [
          "network"
        ],
        "operationId": "create",
        "parameters": [
          {
            "description": "Network configuration",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful network build",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/org/add": {
      "post": {
        "tags": [
          "org"
        ],
        "operationId": "add",
        "parameters": [
          {
            "description": "Network configuration",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/extraOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful org addition",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "channel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "orgs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "e_policy": {
      "type": "object",
      "properties": {
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/identities"
          }
        },
        "policy": {
          "type": "object",
          "properties": {
            "count": {
              "type": "string"
            },
            "signature": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "extraOrg": {
      "type": "object",
      "properties": {
        "channelName": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/orgs"
        }
      }
    },
    "identities": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "org": {
          "type": "string"
        }
      }
    },
    "network": {
      "type": "object",
      "properties": {
        "orderer": {
          "$ref": "#/definitions/orderer"
        },
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orgs"
          }
        }
      }
    },
    "object": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/channel"
          }
        },
        "e_policy": {
          "$ref": "#/definitions/e_policy"
        },
        "name": {
          "description": "Name of the network",
          "type": "string",
          "minLength": 1
        },
        "network": {
          "$ref": "#/definitions/network"
        }
      }
    },
    "orderer": {
      "type": "object",
      "properties": {
        "consensus": {
          "type": "string"
        },
        "count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "orgs": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "no_of_peers": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Fabric Starter Server",
    "title": "FSS",
    "version": "1.0.0"
  },
  "host": "localhost:9000",
  "basePath": "/",
  "paths": {
    "/network/create": {
      "post": {
        "tags": [
          "network"
        ],
        "operationId": "create",
        "parameters": [
          {
            "description": "Network configuration",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful network build",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/org/add": {
      "post": {
        "tags": [
          "org"
        ],
        "operationId": "add",
        "parameters": [
          {
            "description": "Network configuration",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/extraOrg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful org addition",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EPolicyPolicy": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string"
        },
        "signature": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "channel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "orgs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "e_policy": {
      "type": "object",
      "properties": {
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/identities"
          }
        },
        "policy": {
          "type": "object",
          "properties": {
            "count": {
              "type": "string"
            },
            "signature": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "extraOrg": {
      "type": "object",
      "properties": {
        "channelName": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/orgs"
        }
      }
    },
    "identities": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "org": {
          "type": "string"
        }
      }
    },
    "network": {
      "type": "object",
      "properties": {
        "orderer": {
          "$ref": "#/definitions/orderer"
        },
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orgs"
          }
        }
      }
    },
    "object": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/channel"
          }
        },
        "e_policy": {
          "$ref": "#/definitions/e_policy"
        },
        "name": {
          "description": "Name of the network",
          "type": "string",
          "minLength": 1
        },
        "network": {
          "$ref": "#/definitions/network"
        }
      }
    },
    "orderer": {
      "type": "object",
      "properties": {
        "consensus": {
          "type": "string"
        },
        "count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "orgs": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "no_of_peers": {
          "type": "string"
        }
      }
    }
  }
}`))
}
